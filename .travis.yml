language: python

env:
    global:
        - DEPENDS="numpy"
        - INSTALL_TYPE="pip"
        - EXTRA_WHEELS="https://5cf40426d9f06eb7461d-6fe47d9331aba7cd62fc36c7196769e4.ssl.cf2.rackcdn.com"
        - EXTRA_PIP_FLAGS="--find-links=$EXTRA_WHEELS"

python:
    - 3.4
    - 3.5
    - 3.6

matrix:
  include:
    # With sympy we can run doctests
    - python: 2.7
      env:
        - DEPENDS="-r doc-requirements.txt"
        - COVER_ARGS="--cov=fslutils"
        - DOCTEST_ARGS="--doctest-modules"
        - DOC_DOCTEST=1
    # Absolute minimum dependencies
    - python: 2.7
      env:
        - DEPENDS="numpy==1.8"
    - python: 2.7
      env:
        - INSTALL_TYPE=pipe
    - python: 2.7
      env:
        - INSTALL_TYPE=setup
    - python: 2.7
      env:
        - INSTALL_TYPE=sdist
    - python: 2.7
      env:
        - DEPENDS=
        - INSTALL_TYPE=wheel
    - python: 2.7
      env:
        - DEPENDS=
        - INSTALL_TYPE=requirements

before_install:
    - python -m pip install --upgrade pip
    - pip install --upgrade virtualenv
    - virtualenv --python=python venv
    - python --version # just to check
    - source venv/bin/activate
    - pip install pytest # always
    - if [ -n "$DEPENDS" ]; then
        pip install $EXTRA_PIP_FLAGS $DEPENDS;
      fi;

install:
    - |
      if [ "$INSTALL_TYPE" == "pip" ]; then
          pip install .
      elif [ "$INSTALL_TYPE" == "pipe" ]; then
          pip install -e .
      elif [ "$INSTALL_TYPE" == "setup" ]; then
          python setup.py install
      elif [ "$INSTALL_TYPE" == "sdist" ]; then
          python setup.py egg_info  # check egg_info while we're here
          python setup.py sdist
          pip install $EXTRA_PIP_FLAGS dist/*.tar.gz
      elif [ "$INSTALL_TYPE" == "wheel" ]; then
          pip install wheel
          python setup.py bdist_wheel
          pip install $EXTRA_PIP_FLAGS dist/*.whl
      elif [ "$INSTALL_TYPE" == "requirements" ]; then
          pip install $EXTRA_PIP_FLAGS -r requirements.txt
          pip install .
      fi

script:
    # Change into an innocuous directory and find tests from
    # installation
    - |
      mkdir for_testing
      cd for_testing
      if [ -n "${COVER_ARGS}" ]; then
          cp ../.coveragerc .
          pip install pytest-cov
          pip install coveralls
      fi
      py.test $COVER_ARGS $DOCTEST_ARGS --pyargs fslutils
      cd ..
      if [ -n "${DOC_DOCTEST}" ]; then
          make html
          cd doc && make doctest
      fi

after_success:
    - if [ -n "${COVER_ARGS}" ]; then coveralls; fi
